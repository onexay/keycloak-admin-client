# coding: utf-8

"""
    My Project

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import openapi_client
from openapi_client.api.keycloak_admin_users_api import KeycloakAdminUsersApi  # noqa: E501
from openapi_client.rest import ApiException


class TestKeycloakAdminUsersApi(unittest.TestCase):
    """KeycloakAdminUsersApi unit test stubs"""

    def setUp(self):
        self.api = openapi_client.api.keycloak_admin_users_api.KeycloakAdminUsersApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_admin_realms_realm_users_count_get(self):
        """Test case for admin_realms_realm_users_count_get

        Returns the number of users that match the given criteria.  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_get(self):
        """Test case for admin_realms_realm_users_get

        Get users Returns a stream of users, filtered according to query parameters.  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_post(self):
        """Test case for admin_realms_realm_users_post

        Create a new user Username must be unique.  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_profile_get(self):
        """Test case for admin_realms_realm_users_profile_get

        /admin/realms/{realm}/users/profile  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_profile_metadata_get(self):
        """Test case for admin_realms_realm_users_profile_metadata_get

        /admin/realms/{realm}/users/profile/metadata  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_profile_put(self):
        """Test case for admin_realms_realm_users_profile_put

        /admin/realms/{realm}/users/profile  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_configured_user_storage_credential_types_get(self):
        """Test case for admin_realms_realm_users_user_id_configured_user_storage_credential_types_get

        Return credential types, which are provided by the user storage where user is stored.  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_consents_client_delete(self):
        """Test case for admin_realms_realm_users_user_id_consents_client_delete

        Revoke consent and offline tokens for particular client from user  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_consents_get(self):
        """Test case for admin_realms_realm_users_user_id_consents_get

        Get consents granted by the user  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_credentials_credential_id_delete(self):
        """Test case for admin_realms_realm_users_user_id_credentials_credential_id_delete

        Remove a credential for a user  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_credentials_credential_id_move_after_new_previous_credential_id_post(self):
        """Test case for admin_realms_realm_users_user_id_credentials_credential_id_move_after_new_previous_credential_id_post

        Move a credential to a position behind another credential  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_credentials_credential_id_move_to_first_post(self):
        """Test case for admin_realms_realm_users_user_id_credentials_credential_id_move_to_first_post

        Move a credential to a first position in the credentials list of the user  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_credentials_credential_id_user_label_put(self):
        """Test case for admin_realms_realm_users_user_id_credentials_credential_id_user_label_put

        Update a credential label for a user  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_credentials_get(self):
        """Test case for admin_realms_realm_users_user_id_credentials_get

        /admin/realms/{realm}/users/{user-id}/credentials  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_delete(self):
        """Test case for admin_realms_realm_users_user_id_delete

        Delete the user  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_disable_credential_types_put(self):
        """Test case for admin_realms_realm_users_user_id_disable_credential_types_put

        Disable all credentials for a user of a specific type  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_execute_actions_email_put(self):
        """Test case for admin_realms_realm_users_user_id_execute_actions_email_put

        Send an email to the user with a link they can click to execute particular actions.  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_federated_identity_get(self):
        """Test case for admin_realms_realm_users_user_id_federated_identity_get

        Get social logins associated with the user  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_federated_identity_provider_delete(self):
        """Test case for admin_realms_realm_users_user_id_federated_identity_provider_delete

        Remove a social login provider from user  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_federated_identity_provider_post(self):
        """Test case for admin_realms_realm_users_user_id_federated_identity_provider_post

        Add a social login provider to the user  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_get(self):
        """Test case for admin_realms_realm_users_user_id_get

        Get representation of the user  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_groups_count_get(self):
        """Test case for admin_realms_realm_users_user_id_groups_count_get

        /admin/realms/{realm}/users/{user-id}/groups/count  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_groups_get(self):
        """Test case for admin_realms_realm_users_user_id_groups_get

        /admin/realms/{realm}/users/{user-id}/groups  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_groups_group_id_delete(self):
        """Test case for admin_realms_realm_users_user_id_groups_group_id_delete

        /admin/realms/{realm}/users/{user-id}/groups/{groupId}  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_groups_group_id_put(self):
        """Test case for admin_realms_realm_users_user_id_groups_group_id_put

        /admin/realms/{realm}/users/{user-id}/groups/{groupId}  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_impersonation_post(self):
        """Test case for admin_realms_realm_users_user_id_impersonation_post

        Impersonate the user  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_logout_post(self):
        """Test case for admin_realms_realm_users_user_id_logout_post

        Remove all user sessions associated with the user Also send notification to all clients that have an admin URL to invalidate the sessions for the particular user.  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_offline_sessions_client_uuid_get(self):
        """Test case for admin_realms_realm_users_user_id_offline_sessions_client_uuid_get

        Get offline sessions associated with the user and client  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_put(self):
        """Test case for admin_realms_realm_users_user_id_put

        Update the user  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_reset_password_email_put(self):
        """Test case for admin_realms_realm_users_user_id_reset_password_email_put

        Send an email to the user with a link they can click to reset their password.  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_reset_password_put(self):
        """Test case for admin_realms_realm_users_user_id_reset_password_put

        Set up a new password for the user.  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_send_verify_email_put(self):
        """Test case for admin_realms_realm_users_user_id_send_verify_email_put

        Send an email-verification email to the user An email contains a link the user can click to verify their email address.  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_sessions_get(self):
        """Test case for admin_realms_realm_users_user_id_sessions_get

        Get sessions associated with the user  # noqa: E501
        """
        pass

    def test_admin_realms_realm_users_user_id_unmanaged_attributes_get(self):
        """Test case for admin_realms_realm_users_user_id_unmanaged_attributes_get

        /admin/realms/{realm}/users/{user-id}/unmanagedAttributes  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
