# coding: utf-8

"""
    My Project

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import openapi_client
from openapi_client.api.organizations_api import OrganizationsApi  # noqa: E501
from openapi_client.rest import ApiException


class TestOrganizationsApi(unittest.TestCase):
    """OrganizationsApi unit test stubs"""

    def setUp(self):
        self.api = openapi_client.api.organizations_api.OrganizationsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_admin_realms_realm_organizations_get(self):
        """Test case for admin_realms_realm_organizations_get

        Returns a paginated list of organizations filtered according to the specified parameters  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_delete(self):
        """Test case for admin_realms_realm_organizations_id_delete

        Deletes the organization  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_get(self):
        """Test case for admin_realms_realm_organizations_id_get

        Returns the organization representation  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_identity_providers_alias_delete(self):
        """Test case for admin_realms_realm_organizations_id_identity_providers_alias_delete

        Removes the identity provider with the specified alias from the organization  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_identity_providers_alias_get(self):
        """Test case for admin_realms_realm_organizations_id_identity_providers_alias_get

        Returns the identity provider associated with the organization that has the specified alias  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_identity_providers_get(self):
        """Test case for admin_realms_realm_organizations_id_identity_providers_get

        Returns all identity providers associated with the organization  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_identity_providers_post(self):
        """Test case for admin_realms_realm_organizations_id_identity_providers_post

        Adds the identity provider with the specified id to the organization  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_members_count_get(self):
        """Test case for admin_realms_realm_organizations_id_members_count_get

        Returns number of members in the organization.  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_members_get(self):
        """Test case for admin_realms_realm_organizations_id_members_get

        Returns a paginated list of organization members filtered according to the specified parameters  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_members_id_delete(self):
        """Test case for admin_realms_realm_organizations_id_members_id_delete

        Removes the user with the specified id from the organization  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_members_id_get(self):
        """Test case for admin_realms_realm_organizations_id_members_id_get

        Returns the member of the organization with the specified id  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_members_id_organizations_get(self):
        """Test case for admin_realms_realm_organizations_id_members_id_organizations_get

        Returns the organizations associated with the user that has the specified id  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_members_invite_existing_user_post(self):
        """Test case for admin_realms_realm_organizations_id_members_invite_existing_user_post

        Invites an existing user to the organization, using the specified user id  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_members_invite_user_post(self):
        """Test case for admin_realms_realm_organizations_id_members_invite_user_post

        Invites an existing user or sends a registration link to a new user, based on the provided e-mail address.  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_members_post(self):
        """Test case for admin_realms_realm_organizations_id_members_post

        Adds the user with the specified id as a member of the organization  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_id_put(self):
        """Test case for admin_realms_realm_organizations_id_put

        Updates the organization  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_members_id_organizations_get(self):
        """Test case for admin_realms_realm_organizations_members_id_organizations_get

        Returns the organizations associated with the user that has the specified id  # noqa: E501
        """
        pass

    def test_admin_realms_realm_organizations_post(self):
        """Test case for admin_realms_realm_organizations_post

        Creates a new organization  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
